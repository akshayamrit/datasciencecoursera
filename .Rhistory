library(devtools)
install.packages("slidify")
search()
install_github("slidify","ramnathv")
install_github("slidify","ramnathv")
install_github(slidify','ramnathv')
install_github('slidify','ramnathv')
library(devtools)
pkgs <- c('ramnathv/slidifyLibraries', 'ramnathv/slidify')
devtools::install_github(pkgs)
search()
library(slidify)
install.packages("ggplot2")
source("http://bioconductor.org/biocLite.R")
install.packages("BiocManager")
BiocManager::install()
BiocManager::available()
BiocManager::install(c("GenomicFeatures", "AnnotationDbi"))
library(ggplot2)
search()
find.package("devtools")
library(devtools)
find_rtools()
find.package("KernSmooth")
library(KernSmooth)
clear()
m <- matrix(rnorm(25,10), nrow = 5,ncol = 5)
m
solve(m)
library("matlib")
library(matlib)
install.packages("matlib")
matlib::inv(m) == solve(m)
matlib::inv(m)
solve(m)
library(xlsx)
fun(libname, pkgname)
library(openxlsx)
library(xlsx)
Sys.setenv(JAVA_HOME='C:\\Program Files\\Java\\jre1.8.0_211')
library(rJava)
find.java <- function() {
for (root in c("HLM", "HCU")) for (key in c("Software\\JavaSoft\\Java Runtime Environment",
"Software\\JavaSoft\\Java Development Kit")) {
hive <- try(utils::readRegistry(key, root, 2),
silent = TRUE)
if (!inherits(hive, "try-error"))
return(hive)
}
hive
}
find.java()
Sys.setenv(JAVA_HOME='C:\\Program Files (x86)\\Java\\jre1.8.0_211')
find.java()
Sys.setenv(JAVA_HOME="C:\Program Files (x86)\Java\jre1.8.0_211")
Sys.setenv(JAVA_HOME="C:\\Program Files (x86)\\Java\\jre1.8.0_211")
find.java()
find.java <- function() {
for (root in c("HLM", "HCU")) for (key in c("Software\\JavaSoft\\Java Runtime Environment",
"Software\\JavaSoft\\Java Development Kit")) {
hive <- try(utils::readRegistry(key, root, 2),
silent = TRUE)
if (!inherits(hive, "try-error"))
return(hive)
}
hive
}
find.java()
Sys.setenv(JAVA_HOME='C:\\Program Files (x86)\\Java\\jre1.8.0_211')
find.java()
setwd("~/datasciencecoursera/Getting and Cleaning Data/Course Project")
library(data.table)
activity_labels <- read.table(file = "UCI HAR Dataset/activity_labels.txt")
features <- read.table(file = "UCI HAR Dataset/features.txt")
library(stringr)
head(features)
con = url("http://scholar.google.com/citations?user=HI-I6C0AAAAJ&hl=en")
htmlCode = readLines(con)
close(con)
htmlCode
setwd("~/datasciencecoursera")
library(XML)
url <- "http://scholar.google.com/citations?user=HI-I6C0AAAAJ&hl=en"
html <- htmlTreeParse(url, useInternalNodes=T)
xpathSApply(html, "//title", xmlValue)
library(httr); html2 = GET(url)
content2 = content(html2,as="text")
parsedHtml = htmlParse(content2,asText=TRUE)
xpathSApply(parsedHtml, "//title", xmlValue)
?grep
?grepl
grep("WALK", activity_labels$V2)
grepl("WALK", activity_labels$V2)
