table <- pollutantmean("specdata", "", id = 1:2)
table <- NULL
da1 <- read_csv("specdata/001.csv")
rbind(table,da1)
pollutantmean <- function(directory, pollutant, id = 1:332) {
tableData <- NULL
for (i in id) {
tFile <- paste0(directory,"/",formatC(i,width = 3,format = "d", flag = "0"),".csv")
tableData <- rbind(tableData,read_csv(tFile))
}
tableData
}
table <- pollutantmean("specdata", "", id = 1:2)
colMeans(table,na.rm = T)
colMeans(table[0,1],na.rm = T)
colMeans(table[0,2],na.rm = T)
colMeans(table[[0,2]],na.rm = T)
colMeans(table$nitrate,na.rm = T)
colMeans(table[[0,3]],na.rm = T)
colMeans(table[0,3],na.rm = T)
colMeans(table[0,3],na.rm = TRUE)
table <- pollutantmean("specdata", "", id = 1:10)
colMeans(table[0,3],na.rm = TRUE)
library(readr)
?colMeans
colMeans(table, na.rm = T)
mean(table$sulfate, na.rm = T)
mean(table$nitrate, na.rm = T)
pollutantmean <- function(directory, pollutant, id = 1:332) {
tableData <- NULL
for (i in id) {
tFile <- paste0(directory,"/",formatC(i,width = 3,format = "d", flag = "0"),".csv")
tableData <- rbind(tableData,read_csv(tFile))
}
if (pollutant in "sulfate") {
return(mean(tableData$sulfate, na.rm = T))
} else {
return(mean(tableData$nitrate, na.rm = T))
}
}
pollutantmean <- function(directory, pollutant, id = 1:332) {
tableData <- NULL
for (i in id) {
tFile <- paste0(directory,"/",formatC(i,width = 3,format = "d", flag = "0"),".csv")
tableData <- rbind(tableData,read_csv(tFile))
}
if (pollutant %in% "sulfate") {
return(mean(tableData$sulfate, na.rm = T))
} else {
return(mean(tableData$nitrate, na.rm = T))
}
}
pollutantmean("specdata", "sulfate", id = 1:10)
pollutantmean("specdata", "nitrate", id = 1:10)
pollutantmean <- function(directory, pollutant, id = 1:332) {
tableData <- NULL
for (i in id) {
tFile <- paste0(directory,"/",formatC(i,width = 3,format = "d", flag = "0"),".csv")
tableData <- rbind(tableData,read_csv(tFile))
}
# if (pollutant %in% "sulfate") {
#       return(mean(tableData$sulfate, na.rm = T))
# } else {
#       return(mean(tableData$nitrate, na.rm = T))
# }
ifelse(pollutant %in% "sulfate", mean(tableData$sulfate, mean(tableData$nitrate, na.rm = T)))
}
pollutantmean("specdata", "sulfate", id = 1:10)
pollutantmean <- function(directory, pollutant, id = 1:332) {
tableData <- NULL
for (i in id) {
tFile <- paste0(directory,"/",formatC(i,width = 3,format = "d", flag = "0"),".csv")
tableData <- rbind(tableData,read_csv(tFile))
}
# if (pollutant %in% "sulfate") {
#       return(mean(tableData$sulfate, na.rm = T))
# } else {
#       return(mean(tableData$nitrate, na.rm = T))
# }
ifelse(pollutant %in% "sulfate", mean(tableData$sulfate, na.rm = T), mean(tableData$nitrate, na.rm = T)))
}
pollutantmean <- function(directory, pollutant, id = 1:332) {
tableData <- NULL
for (i in id) {
tFile <- paste0(directory,"/",formatC(i,width = 3,format = "d", flag = "0"),".csv")
tableData <- rbind(tableData,read_csv(tFile))
}
# if (pollutant %in% "sulfate") {
#       return(mean(tableData$sulfate, na.rm = T))
# } else {
#       return(mean(tableData$nitrate, na.rm = T))
# }
ifelse(pollutant %in% "sulfate", mean(tableData$sulfate, na.rm = T), mean(tableData$nitrate, na.rm = T))
}
pollutantmean("specdata", "sulfate", id = 1:10)
pollutantmean <- function(directory, pollutant, id = 1:332) {
tableData <- NULL
for (i in id) {
tFile <- paste0(directory,"/",formatC(i,width = 3,format = "d", flag = "0"),".csv")
tableData <- rbind(tableData,read_csv(tFile))
}
if (pollutant %in% "sulfate") {
return(mean(tableData$sulfate, na.rm = T))
} else if (pollutant %in% "nitrate") {
return(mean(tableData$nitrate, na.rm = T))
}
# ifelse(pollutant %in% "sulfate", mean(tableData$sulfate, na.rm = T), mean(tableData$nitrate, na.rm = T))
}
pollutantmean("specdata", "sulfate", id = 1:10)
pollutantmean("specdata", "nitrate", id = 1:10)
pollutantmean("specdata", "sulf", id = 1:10)
pollutantmean <- function(directory, pollutant, id = 1:332) {
tableData <- NULL
for (i in id) {
tFile <- paste0(directory,"/",formatC(i,width = 3,format = "d", flag = "0"),".csv")
tableData <- rbind(tableData,read_csv(tFile))
}
if (pollutant %in% "sulfate") {
return(mean(tableData$sulfate, na.rm = T))
} else if (pollutant %in% "nitrate") {
return(mean(tableData$nitrate, na.rm = T))
} else {
stop("Invalid Pollutant")
}
# ifelse(pollutant %in% "sulfate", mean(tableData$sulfate, na.rm = T), mean(tableData$nitrate, na.rm = T))
}
pollutantmean("specdata", "sulf", id = 1:10)
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
pollutantmean <- function(directory, pollutant, id = 1:332) {
tableData <- NULL
ifelse(dir.exists(directory), "Directory Exists", stop("Directory Doesn't exist"))
for (i in id) {
tFile <- paste0(directory,"/",formatC(i,width = 3,format = "d", flag = "0"),".csv")
tableData <- rbind(tableData,read_csv(tFile))
}
if (pollutant %in% "sulfate") {
return(mean(tableData$sulfate, na.rm = T))
} else if (pollutant %in% "nitrate") {
return(mean(tableData$nitrate, na.rm = T))
} else {
stop("Invalid Pollutant")
}
}
pollutantmean("specdata", "nitrate", 23)
pollutantmean("specdata", "nitrate", 23)
pollutantmean <- function(directory, pollutant, id = 1:332) {
tableData <- NULL
ifelse(dir.exists(directory), print("Directory Exists"), stop("Directory Doesn't exist"))
for (i in id) {
tFile <- paste0(directory,"/",formatC(i,width = 3,format = "d", flag = "0"),".csv")
tableData <- rbind(tableData,read_csv(tFile))
}
if (pollutant %in% "sulfate") {
return(mean(tableData$sulfate, na.rm = T))
} else if (pollutant %in% "nitrate") {
return(mean(tableData$nitrate, na.rm = T))
} else {
stop("Invalid Pollutant")
}
}
pollutantmean("specdata", "nitrate", 23)
pollutantmean("specdat", "nitrate", 23)
pollutantmean <- function(directory, pollutant, id = 1:332) {
tableData <- NULL
assertthat::is.dir(directory)
for (i in id) {
tFile <- paste0(directory,"/",formatC(i,width = 3,format = "d", flag = "0"),".csv")
tableData <- rbind(tableData,read_csv(tFile))
}
if (pollutant %in% "sulfate") {
return(mean(tableData$sulfate, na.rm = T))
} else if (pollutant %in% "nitrate") {
return(mean(tableData$nitrate, na.rm = T))
} else {
stop("Invalid Pollutant")
}
}
pollutantmean("specdat", "nitrate", 23)
pollutantmean("specdata", "nitrate", 23)
?read_csv
pollutantmean <- function(directory, pollutant, id = 1:332) {
tableData <- NULL
#Check whether the directory exists
assertthat::is.dir(directory)
#Create table which will have value from files specified in "id"
for (i in id) {
tFile <- paste0(directory,"/",formatC(i,width = 3,format = "d", flag = "0"),".csv")
tableData <- rbind(tableData,read_csv(tFile))
}
#Find the mean of specified pollutant
if (pollutant %in% "sulfate") {
return(mean(tableData$sulfate, na.rm = T))
} else if (pollutant %in% "nitrate") {
return(mean(tableData$nitrate, na.rm = T))
} else {
stop("Invalid Pollutant")
}
}
pollutantmean("specdata", "sulfate", 1:10)
suppressMessages(read_csv("specdata/001.csv"))
read_csv("specdata/001.csv")
rm(list = ls())
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", id = 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", id = 1:10)
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
read_csv("specdata/001.csv")
table001 <- read_csv("specdata/001.csv")
table001[is.na(table001)]
table001[is.na(table001[])]
table001[is.na(table001[,])]
table001[is.na(table001)]
table001[is.na(table001),]
table001[!is.na(table001),]
table001[which(!is.na(table001)),]
table001[which(!is.na(table001$sulfate)),]
table001[which(!is.na(table001$sulfate | table001$nitrate)),]
complete.cases(table001)
table001[complete.cases(table001),]
nrow(table001[complete.cases(table001),])
dFrame <- NULL
dFrame <- data.frame("id" = 1, "nobs" = nrow(table001[complete.cases(table001),]))
dFrame
dFrame <- data.frame("id" = NULL, "nobs" = NULL)
dFrame
tempFrame <- data.frame("id" = 1, "nobs" = nrow(table001[complete.cases(table001),]))
dFrame <- rbind(dFrame,tempFrame)
dfra
dFrame
table002 <- read_csv("specdata/002.csv")
tempFrame <- data.frame("id" = 1, "nobs" = nrow(table002[complete.cases(table002),]))
dFrame <- rbind(dFrame,tempFrame)
dFrame
complete <- function(directory, id = 1:332) {
dFrame <- data.frame("id" = NULL, "nobs" = NULL)
#Check whether directory exists
assertthat::is.dir(directory)
#Build dFrame
for (i in id) {
tFile <- paste0(directory,"/",formatC(i,width = 3,format = "d", flag = "0"),".csv")
tCSV <- suppressMessages(read_csv(tFile))
tTable <- data.frame("id" = i, "nobs" = nrow(tCSV[complete.cases(tCSV),]))
dFrame <- rbind(dFrame,tTable)
}
return(dFrame)
}
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
complete("specdata", 3)
rm(list = ls())
source("complete.R")
complete("specdata")
problems(...elt())
read_csv("specdata/2.csv")
read_csv("specdata/288.csv")
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
complete("specdata", 3)
?cor
table001 <- read_csv("specdata/001.csv")
cor(table001)
cor(table001$sulfate,table001$nitrate)
table001 <- table001[complete.cases(table001),]
cor(table001$sulfate,table001$nitrate)
head(cor(table001$sulfate,table001$nitrate))
?summary
?cor
tTable <- NULL
rbind(tTable,table001)
for (i in id) {
tFile <- paste0(directory,"/",formatC(i,width = 3,format = "d", flag = "0"),".csv")
tCSV <- suppressMessages(read_csv(tFile))
tTable <- data.frame("id" = i, "nobs" = nrow(tCSV[complete.cases(tCSV),]))
dFrame <- rbind(dFrame,tTable)
}
id <- 1:332
directory <- "specdata"
for (i in id) {
tFile <- paste0(directory,"/",formatC(i,width = 3,format = "d", flag = "0"),".csv")
tCSV <- suppressMessages(read_csv(tFile))
tTable <- data.frame("id" = i, "nobs" = nrow(tCSV[complete.cases(tCSV),]))
dFrame <- rbind(dFrame,tTable)
}
dFrame <- NULL
for (i in id) {
tFile <- paste0(directory,"/",formatC(i,width = 3,format = "d", flag = "0"),".csv")
tCSV <- suppressMessages(read_csv(tFile))
tTable <- data.frame("id" = i, "nobs" = nrow(tCSV[complete.cases(tCSV),]))
dFrame <- rbind(dFrame,tTable)
}
table288 <- read_csv("specdata/288.csv")
source("pollutantmean.csv")
source("pollutantmean.R")
pollutantmean("specdata","sulfate")
source("pollutantmean.R")
source("pollutantmean.R")
pollutantmean("specdata","sulfate")
read_csv("specdata/288.csv", col_types = c("date", "numeric", "numeric", "numeric"))
read_csv(file = "specdata/288.csv", col_types = c("date", "numeric", "numeric", "numeric"))
read_csv(file = "specdata/288.csv", col_types = c("D", "d", "d", "d"))
read_csv(file = "specdata/288.csv")
read_csv(file = "specdata/288.csv", col_types = c("Dddd"))
source("specdata/complete.R")
source("complete.R")
complete("specdata")
source("pollutantmean.R")
pollutantmean("specdata","sulfate")
length(list.files("specdata"))
corr <- function(directory, threshold = 0) {
#Check whether the directory exists.
assertthat::is.dir(directory)
#Create vector with all correlations.
corrVector <- NULL
j = 1
for (i in 1:length(list.files(directory))) {
tFile <- paste0(directory,"/",formatC(i,width = 3,format = "d", flag = "0"),".csv")
tCSV <- read_csv(tFile,col_types = "Dddd")
tTable <- tCSV[complete.cases(tCSV),]
#Filter Data using threshold
if (nrow(tTable) > threshold) {
corrVector[j] <- cor(tTable$sulfate, tTable$nitrate)
j++
}
return(corrVector)
}
}
corr <- function(directory, threshold = 0) {
#Check whether the directory exists.
assertthat::is.dir(directory)
#Create vector with all correlations.
corrVector <- NULL
j = 1
for (i in 1:length(list.files(directory))) {
tFile <- paste0(directory,"/",formatC(i,width = 3,format = "d", flag = "0"),".csv")
tCSV <- read_csv(tFile,col_types = "Dddd")
tTable <- tCSV[complete.cases(tCSV),]
#Filter Data using threshold
if (nrow(tTable) > threshold) {
corrVector[j] <- cor(tTable$sulfate, tTable$nitrate)
j++
}
}
return(corrVector)
}
corr <- function(directory, threshold = 0) {
#Check whether the directory exists.
assertthat::is.dir(directory)
#Create vector with all correlations.
corrVector <- NULL
j = 1
for (i in 1:length(list.files(directory))) {
tFile <- paste0(directory,"/",formatC(i,width = 3,format = "d", flag = "0"),".csv")
tCSV <- read_csv(tFile,col_types = "Dddd")
tTable <- tCSV[complete.cases(tCSV),]
#Filter Data using threshold
if (nrow(tTable) > threshold) {
corrVector[j] <- cor(tTable$sulfate, tTable$nitrate)
j=j+1
}
}
return(corrVector)
}
corr("specdata", 150)
cr <- corr("specdata", 150)
head(cr)
summary(cr)
rm(list = ls())
vstr <- "3.5.1"
RNGversion(vstr)
source("pollutantmean.R")
source("complete.R")
source("corr.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "sulfate", 34)
pollutantmean("specdata", "nitrate")
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
print(cc$nobs)
cc <- complete("specdata", 54)
print(cc$nobs)
set.seed(42)
cc <- complete("specdata", 332:1)
use <- sample(332, 10)
print(cc[use, "nobs"])
cr <- corr("specdata")
cr <- sort(cr)
set.seed(868)
out <- round(cr[sample(length(cr), 5)], 4)
print(out)
cr <- corr("specdata", 129)
cr <- sort(cr)
n <- length(cr)
set.seed(197)
out <- c(n, round(cr[sample(n, 5)], 4))
print(out)
cr <- corr("specdata", 2000)
n <- length(cr)
cr <- corr("specdata", 1000)
cr <- sort(cr)
print(c(n, round(cr, 4)))
complete("specdata")
getwd()
setwd("~")
getwd()
setwd("datasciencecoursera")
getwd()
getwd()
swirl()
head(flags)
dim(flags)
viewinfo()
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(cls_list,class)
cls_vect <- sapply(flags,class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[,11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors,mean)
flag_shapes <- flags[,19:23]
lapply(flag_shapes,range)
shape_mat <- sapply(flag_shapes,range)
shape_mat
class()
class(shape_mat)
unique(c(3,4,5,5,6,6))
unique(c(3,4,5,5,5,6,6))
unique_vals <- lapply(flags, unique)
unique_vals
lapply(unique_vals, length)
sapply(flags,length)
sapply(unique_vals,length)
sapply(flags,unique)
lapply(unique_vals, function(elem) elem[2])
list.files()
source("pollutantmean.R")
rm(list = ls())
x <- list (a = 1:5, b = rnorm(10))
lapply(x,mean)
?rnorm
mean(rnorm(20,mean = 2))
rnorm(20, 5)
x <- list(a = rnorm(20), b = rnorm(20), c = rnorm(20), d = rnorm(20))
lapply(x,mean)
rnorm(20)
sapply(x,mean)
lapply(x, runif)
x <- 1:4
lapply(x, runif, min = 0, max = 10)
?runif
lapply(x, rrunif)
unif)
lapply(x, runif)
x <- list(a = matrix(1:10,5,2), b = matrix(1:4,2,2))
lapply(x, function(y){y[,1]})
sapply(x, function(y){y[,1]})
x <- list(a = matrix(1:10,5,2), b = matrix(1:10,2,5))
lapply(x, function(y){y[,1]})
x <- list(a = matrix(1:10,5,2), b = matrix(1:10,5,2))
sapply(x, function(y){y[,1]})
x <- matrix(rnorm(200),20,20)
x
x <- matrix(rnorm(200),20,10)
apply(x, 2, mean)
apply(x, 1, mean)
?apply
?colMeans
getwd()
list.files()
read_csv("hw1_data.csv")
x <- read_csv("hw1_data.csv")
colMeans(x, na.rm = T)
colMeans(x[,1], na.rm = T)
colMeans(x$Solar.R, na.rm = T)
colMeans(x[,2], na.rm = T)
mapply(rep,1:4, 4:1)
y <- mapply(rep,1:4, 4:1)
y <- read_csv("specdata/001,csv", col_types = "Dddd")
list.files()
y <- read_csv("specdata/001.csv")
mapply(colMeans,x,y)
colMeans(x)
colMeans(y)
colMeans(y[,2])
mapply(colMeans, x,y)
mapply(colMeans, x,y[,2])
mapply(colMeans,c(x,y[,2]))
mapply(colMeans,x)
colMeans(x)
function(colMeans
?colMeans
?colMeans
function(colMeans)
mapply(rep, 1:4,4:1)
mapply(rep,1:4,4:1)
mapply(colMeans,c(x[,2],y[,2]))
colMeans(x[,2])
colMeans(y[,2])
colMeans(y)
colMeans(x)
