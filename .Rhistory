library(devtools)
install.packages("slidify")
search()
install_github("slidify","ramnathv")
install_github("slidify","ramnathv")
install_github(slidify','ramnathv')
install_github('slidify','ramnathv')
library(devtools)
pkgs <- c('ramnathv/slidifyLibraries', 'ramnathv/slidify')
devtools::install_github(pkgs)
search()
library(slidify)
install.packages("ggplot2")
source("http://bioconductor.org/biocLite.R")
install.packages("BiocManager")
BiocManager::install()
BiocManager::available()
BiocManager::install(c("GenomicFeatures", "AnnotationDbi"))
library(ggplot2)
search()
find.package("devtools")
library(devtools)
find_rtools()
find.package("KernSmooth")
library(KernSmooth)
clear()
m <- matrix(rnorm(25,10), nrow = 5,ncol = 5)
m
solve(m)
library("matlib")
library(matlib)
install.packages("matlib")
matlib::inv(m) == solve(m)
matlib::inv(m)
solve(m)
getwd()
setwd("~/datasciencecoursera/ProgrammingAssignment2")
source("cachematrix.R")
matrix(rnorm(1:50), nrow = 10, ncol = 5)
m <- matrix(1:50,nrow = 10, ncol = 5)
m
solve(m)
m <- matrix(1:50,nrow = 10, ncol = 5, byrow = T)
m
m <- matrix(1:100, ncol = 10, nrow = 10, byrow = T)
m
solve(m)
m <- matrix(rnorm(100), ncol = 10, nrow = 10, byrow = T)
m
solve(m)
source("cachematrix.R")
makeCacheMatrix(rnorm(100))
m <- makeCacheMatrix(rnorm(100))
m$get()
m$getInverse()
source("cachematrix.R")
cacheSolve()
cacheSolve(m)
browser()
cacheSolve(m)
cacheSolve(m)
cacheSolve(m)
makeCacheMatrix(rnorm(100))
cacheSolve(makeCacheMatrix(rnorm(100)))
source("cachematrix.R")
cacheSolve(makeCacheMatrix(rnorm(100)))
m <- makeCacheMatrix(rnorm(100))
m
cacheSolve(m)
solve(m)
solve(m$get())
m
m$get()
m <- makeCacheMatrix()
m
m$get()
m <- makeCacheMatrix(matrix(rnorm(100)))
m
m$get()
m <- makeCacheMatrix(matrix(rnorm(100), nrow = 10, ncol = 10))
m
m$get()
cacheSolve(m)
cacheSolve(m)
matlib::inv(m$get())
source("cachematrix.R")
m <- makeCacheMatrix(matrix(rnorm(36, mean = 6), nrow = 6, ncol = 6))
m$get()
m$getInverse()
cacheSolve(m)
m$get()
m $getInverse()
cacheSolve(m)
setwd("~")
setwd("~/datasciencecoursera")
