library(devtools)
install.packages("slidify")
search()
install_github("slidify","ramnathv")
install_github("slidify","ramnathv")
install_github(slidify','ramnathv')
install_github('slidify','ramnathv')
library(devtools)
pkgs <- c('ramnathv/slidifyLibraries', 'ramnathv/slidify')
devtools::install_github(pkgs)
search()
library(slidify)
install.packages("ggplot2")
source("http://bioconductor.org/biocLite.R")
install.packages("BiocManager")
BiocManager::install()
BiocManager::available()
BiocManager::install(c("GenomicFeatures", "AnnotationDbi"))
library(ggplot2)
search()
find.package("devtools")
library(devtools)
find_rtools()
find.package("KernSmooth")
library(KernSmooth)
clear()
m <- matrix(rnorm(25,10), nrow = 5,ncol = 5)
m
solve(m)
library("matlib")
library(matlib)
install.packages("matlib")
matlib::inv(m) == solve(m)
matlib::inv(m)
solve(m)
set.seed(1)
rpois(5, 2)
library(readr)
setwd("~/datasciencecoursera")
hosOutcome <- read_csv("outcome-of-care-measures.csv")
hosOutcome
head(hosOutcome)
hosData <- read_csv("hospital-data.csv")
head(hosData)
hosData
outcome <- hosOutcome
rm(hosOutcome)
outcome[, 11] <- as.numeric(outcome[, 11])
outcome <- read_csv("outcome-of-care-measures.csv",  colClasses = "character")
outcome <- read_csv("outcome-of-care-measures.csv", col_types = "character")
ncol(outcome)
outcome <- read_csv("outcome-of-care-measures.csv", col_types = rep("c",46))
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
outcome
head(outcome)
as.data.frame(outcome)
class(outcome)
ncol(outcome)
nrow(outcome)
outcome[, 11] <- as.numeric(outcome[, 11])
hist(outcome[, 11])
rep("c",46)
paste0(rep("c", 46))
paste0(rep("c", 46), collapse = T)
paste0(rep("c", 46))
paste(rep("c", 46), sep = "")
class(outcome$ZIP.Code)
class(outcome$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
r <- rep("c", 46)
paste(c, sep = "")
paste(r, sep = "")
r[1]
paste(r[1:46], sep = "")
paste(r, collapse = "")
outcome <- read_csv("outcome-of-care-measures.csv", col_types = paste(r, collapse = ""))
outcome
outcome[,11] <- hist(outcome[,11])
outcome[,11] <- hist(as.numeric(outcome[,11]))
outcome[, 11] <- as.numeric(outcome[, 11])
class(outcome[,11])
names(outcome[,11])
class(outcome$Hospital 30-Day Death (Mortality) Rates from Heart Attack)
class((outcome$`Hospital 30-Day Death (Mortality) Rates from Heart Attack`))
as.numeric(class((outcome$`Hospital 30-Day Death (Mortality) Rates from Heart Attack`)))
as.numeric((outcome$`Hospital 30-Day Death (Mortality) Rates from Heart Attack`))
outcome$`Hospital 30-Day Death (Mortality) Rates from Heart Attack` <- as.numeric(outcome$`Hospital 30-Day Death (Mortality) Rates from Heart Attack`)
hist(outcome$`Hospital 30-Day Death (Mortality) Rates from Heart Attack`)
unique(outcome$State)
rm(outcome)
best <- function(state, outcome) {
## Read outcome data
library(readr)
outcome_of_care_measures <- suppressMessages(read_csv("outcome-of-care-measures.csv"))
## Check that state and outcome are valid
###Define valid entries
outcome_of_care_measures.States <- unique(outcome_of_care_measures$State)
outcome_of_care_measures.Outcome <- c(“heart attack”, “heart failure”, “pneumonia”)
if (!is.element(state, outcome_of_care_measures.States)) {
stop("invalid state")
}
else if (!is.element(outcome, outcome_of_care_measures.Outcome)) {
stop("invalid outcome")
}
## Return hospital name in that state with lowest 30-day death
## rate
}
best <- function(state, outcome) {
## Read outcome data
library(readr)
outcome_of_care_measures <- suppressMessages(read_csv("outcome-of-care-measures.csv"))
## Check that state and outcome are valid
###Define valid entries
outcome_of_care_measures.States <- unique(outcome_of_care_measures$State)
outcome_of_care_measures.Outcome <- c(“heart attack”, “heart failure”, “pneumonia”)
if (!is.element(state, outcome_of_care_measures.States)) {
stop("invalid state")
}
else if (!is.element(outcome, outcome_of_care_measures.Outcome)) {
stop("invalid outcome")
}
## Return hospital name in that state with lowest 30-day death
## rate
}
outcome_of_care_measures <- suppressMessages(read_csv("outcome-of-care-measures.csv"))
outcome_of_care_measures.States <- unique(outcome_of_care_measures$State)
outcome_of_care_measures.Outcome <- c(“heart attack”, “heart failure”, “pneumonia”)
outcome_of_care_measures
outcome_of_care_measures.States
outcome_of_care_measures.Outcome <- c("heart attack")
outcome_of_care_measures.Outcome <- c(“heart attack”, “heart failure”, “pneumonia”)
outcome_of_care_measures.Outcome <- c("heart attack", "heart failure", "pneumonia")
rm(list = ls(0))
rm(list = ls())
best <- function(state, outcome) {
## Read outcome data
library(readr)
outcome_of_care_measures <- suppressMessages(read_csv("outcome-of-care-measures.csv"))
## Check that state and outcome are valid
###Define valid entries
outcome_of_care_measures.States <- unique(outcome_of_care_measures$State)
outcome_of_care_measures.Outcome <- c("heart attack", "heart failure", "pneumonia")
if (!is.element(state, outcome_of_care_measures.States)) {
stop("invalid state")
}
else if (!is.element(outcome, outcome_of_care_measures.Outcome)) {
stop("invalid outcome")
}
## Return hospital name in that state with lowest 30-day death
## rate
}
best("AA", "heart attack")
best <- function(state, outcome) {
## Read outcome data
library(readr)
outcome_of_care_measures <- suppressMessages(read_csv("outcome-of-care-measures.csv"))
## Check that state and outcome are valid
###Define valid entries
outcome_of_care_measures.States <- unique(outcome_of_care_measures$State)
outcome_of_care_measures.Outcome <- c("heart attack", "heart failure", "pneumonia")
if (!is.element(state, outcome_of_care_measures.States)) {
stop("invalid state")
}
if (!is.element(outcome, outcome_of_care_measures.Outcome)) {
stop("invalid outcome")
}
## Return hospital name in that state with lowest 30-day death
## rate
}
best("AT", "gu")
best("AK", "gu")
best("AK", "pneumonia")
outcome_of_care_measures <- suppressMessages(read_csv("outcome-of-care-measures.csv"))
split.data.frame(outcome_of_care_measures, outcome_of_care_measures$State, drop = T)
split.data.frame(outcome_of_care_measures, outcome_of_care_measures$State, drop = T)$AK
split.data.frame(outcome_of_care_measures, "AK", drop = T)
?split.data.frame
outcome_of_care_measures <- data.frame(outcome_of_care_measures$State, outcome_of_care_measures$`Hospital 30-Day Death (Mortality) Rates from Heart Attack`, outcome_of_care_measures$`Hospital 30-Day Death (Mortality) Rates from Heart Failure`, outcome_of_care_measures$`Hospital 30-Day Death (Mortality) Rates from Pneumonia`)
outcome_of_care_measures
summary(outcome_of_care_measures)
ncol(outcome_of_care_measures)
nrow(outcome_of_care_measures)
best <- function(state, outcome) {
## Read outcome data
library(readr)
outcome_of_care_measures <- suppressMessages(read_csv("outcome-of-care-measures.csv"))
## Check that state and outcome are valid
###Define valid entries
outcome_of_care_measures.States <- unique(outcome_of_care_measures$State)
outcome_of_care_measures.Outcome <- c("heart attack", "heart failure", "pneumonia")
###Check Validity of parameters
if (!is.element(state, outcome_of_care_measures.States)) {
stop("invalid state")
}
if (!is.element(outcome, outcome_of_care_measures.Outcome)) {
stop("invalid outcome")
}
###Create new table without unnecessary data
outcome_of_care_measures <- data.frame(outcome_of_care_measures$State,
outcome_of_care_measures$`Hospital 30-Day Death (Mortality) Rates from Heart Attack`,
outcome_of_care_measures$`Hospital 30-Day Death (Mortality) Rates from Heart Failure`,
outcome_of_care_measures$`Hospital 30-Day Death (Mortality) Rates from Pneumonia`)
## Return hospital name in that state with lowest 30-day death
## rate
}
outcome_of_care_measures[min(outcome_of_care_measures$outcome_of_care_measures..Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack.),]
class(outcome_of_care_measures$outcome_of_care_measures..Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack.)
replace(outcome_of_care_measures, "Not Available", NULL)
m <- as.matrix(outcome_of_care_measures)
m[is.element("Not Available", m)] <- NULL
m[is.element("Not Available", m)] <- NA
m
m <- as.matrix(outcome_of_care_measures)
m
replace(m, "Not Available", NA)
m <- as.matrix(outcome_of_care_measures)
outcome_of_care_measures
View(m)
lapply(outcome_of_care_measures, function(x) {replace(x,x == "Not Available", NA )})
outcome_of_care_measures <- lapply(outcome_of_care_measures, function(x) {replace(x,x == "Not Available", NA )})
head(outcome_of_care_measures)
outcome_of_care_measures <- as.data.frame(outcome_of_care_measures)
outcome_of_care_measures
mean(outcome_of_care_measures$outcome_of_care_measures..Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack.)
mean(outcome_of_care_measures$outcome_of_care_measures..Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack., na.rm = T)
class(outcome_of_care_measures$outcome_of_care_measures..Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack.)
as.numeric(outcome_of_care_measures$outcome_of_care_measures..Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack.)
mean(as.numeric(outcome_of_care_measures$outcome_of_care_measures..Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack.))
mean(as.numeric(outcome_of_care_measures$outcome_of_care_measures..Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack.). na.rm = T
)
mean(as.numeric(outcome_of_care_measures$outcome_of_care_measures..Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack.). na.rm = T)
mean(as.numeric(outcome_of_care_measures$outcome_of_care_measures..Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack.), na.rm = T)
outcome_of_care_measures <- suppressMessages(read_csv("outcome-of-care-measures.csv"))
class(outcome_of_care_measures)
outcome_of_care_measures <- data.frame(outcome_of_care_measures$State,
outcome_of_care_measures$`Hospital 30-Day Death (Mortality) Rates from Heart Attack`,
outcome_of_care_measures$`Hospital 30-Day Death (Mortality) Rates from Heart Failure`,
outcome_of_care_measures$`Hospital 30-Day Death (Mortality) Rates from Pneumonia`)
lapply(outcome_of_care_measures, class)
lapply(outcome_of_care_measures[,2:4], function(x) {x <- as.numeric(x) })
lapply(outcome_of_care_measures, class)
unique(outcome_of_care_measures$outcome_of_care_measures..Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack.)
lapply(outcome_of_care_measures, function(x){ replace(x, x == "Not Available", NA)})
unique(outcome_of_care_measures$outcome_of_care_measures..Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack.)
outcome_of_care_measures <- as.data.frame(lapply(outcome_of_care_measures, function(x){replace(x, x == "Not Available", NA)}))
outcom
outcome_of_care_measures
class(outcome_of_care_measures$outcome_of_care_measures.State) <- as.character(outcome_of_care_measures$outcome_of_care_measures.State)
class(outcome_of_care_measures$outcome_of_care_measures.State)
lapply(outcome_of_care_measures, class)
outcome_of_care_measures <- suppressMessages(read_csv("outcome-of-care-measures.csv"))
outcome_of_care_measures <- data.frame(outcome_of_care_measures$State,
outcome_of_care_measures$`Hospital 30-Day Death (Mortality) Rates from Heart Attack`,
outcome_of_care_measures$`Hospital 30-Day Death (Mortality) Rates from Heart Failure`,
outcome_of_care_measures$`Hospital 30-Day Death (Mortality) Rates from Pneumonia`)
sapply(outcome_of_care_measures, class)
outcome_of_care_measures <- suppressMessages(read_csv("outcome-of-care-measures.csv"))
outcome_of_care_measures <- data.frame("State"=outcome_of_care_measures$State,
"Hospital 30-Day Death (Mortality) Rates from Heart Attack"=outcome_of_care_measures$`Hospital 30-Day Death (Mortality) Rates from Heart Attack`,
"Hospital 30-Day Death (Mortality) Rates from Heart Failure"=outcome_of_care_measures$`Hospital 30-Day Death (Mortality) Rates from Heart Failure`,
"Hospital 30-Day Death (Mortality) Rates from Pneumonia"=outcome_of_care_measures$`Hospital 30-Day Death (Mortality) Rates from Pneumonia`)
outcome_of_care_measures
names(outcome_of_care_measures)
class(outcome_of_care_measures$State)
outcome_of_care_measures <- data.frame("State"=as.character(outcome_of_care_measures$State),
"Hospital 30-Day Death (Mortality) Rates from Heart Attack"=as.numeric(outcome_of_care_measures$`Hospital 30-Day Death (Mortality) Rates from Heart Attack`),
"Hospital 30-Day Death (Mortality) Rates from Heart Failure"=as.numeric(outcome_of_care_measures$`Hospital 30-Day Death (Mortality) Rates from Heart Failure`),
"Hospital 30-Day Death (Mortality) Rates from Pneumonia"=as.numeric(outcome_of_care_measures$`Hospital 30-Day Death (Mortality) Rates from Pneumonia`))
outcome_of_care_measures <- suppressMessages(read_csv("outcome-of-care-measures.csv"))
cbind(outcome_of_care_measures$State,outcome_of_care_measures$`Hospital 30-Day Death (Mortality) Rates from Heart Attack`,outcome_of_care_measures$`Hospital 30-Day Death (Mortality) Rates from Heart Failure`,outcome_of_care_measures$`Hospital 30-Day Death (Mortality) Rates from Pneumonia`)
names(outcome_of_care_measures)
outcome_of_care_measures <- cbind(outcome_of_care_measures$State,outcome_of_care_measures$`Hospital 30-Day Death (Mortality) Rates from Heart Attack`,outcome_of_care_measures$`Hospital 30-Day Death (Mortality) Rates from Heart Failure`,outcome_of_care_measures$`Hospital 30-Day Death (Mortality) Rates from Pneumonia`)
names(outcome_of_care_measures)
outcome_of_care_measures
outcome_of_care_measures <- suppressMessages(read_csv("outcome-of-care-measures.csv"))
?sprintf
test <- data.frame("State"=outcome_of_care_measures$State,
"Hospital 30-Day Death (Mortality) Rates from Heart Attack"=outcome_of_care_measures$`Hospital 30-Day Death (Mortality) Rates from Heart Attack`,
"Hospital 30-Day Death (Mortality) Rates from Heart Failure"=outcome_of_care_measures$`Hospital 30-Day Death (Mortality) Rates from Heart Failure`,
"Hospital 30-Day Death (Mortality) Rates from Pneumonia"=outcome_of_care_measures$`Hospital 30-Day Death (Mortality) Rates from Pneumonia`)
names(test)
test <- lapply(outcome_of_care_measures, function(x) {replace(x, x == "Not Available", NA)})
test <- lapply(test, function(x) {replace(x, x == "Not Available", NA)})
test <- data.frame("State"=outcome_of_care_measures$State,
"Hospital 30-Day Death (Mortality) Rates from Heart Attack"=outcome_of_care_measures$`Hospital 30-Day Death (Mortality) Rates from Heart Attack`,
"Hospital 30-Day Death (Mortality) Rates from Heart Failure"=outcome_of_care_measures$`Hospital 30-Day Death (Mortality) Rates from Heart Failure`,
"Hospital 30-Day Death (Mortality) Rates from Pneumonia"=outcome_of_care_measures$`Hospital 30-Day Death (Mortality) Rates from Pneumonia`)
View(test)
test <- lapply(test, function(x) { replace(x, x == "Not Available", NA)})
test
test <- data.frame("State"=outcome_of_care_measures$State,
"Hospital 30-Day Death (Mortality) Rates from Heart Attack"=outcome_of_care_measures$`Hospital 30-Day Death (Mortality) Rates from Heart Attack`,
"Hospital 30-Day Death (Mortality) Rates from Heart Failure"=outcome_of_care_measures$`Hospital 30-Day Death (Mortality) Rates from Heart Failure`,
"Hospital 30-Day Death (Mortality) Rates from Pneumonia"=outcome_of_care_measures$`Hospital 30-Day Death (Mortality) Rates from Pneumonia`)
names(test)
test <- as.data.frame(lapply(test, function(x) {replace(x, x == "Not Available", NA)}))
test
names(test)
lapply(test, class)
unique(test$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
transform(test, test$State = as.character(test$State))
transform(test, "State" = as.character("State"))
lapply(test,class)
class
test
transform(test, State = as.character(State))
ttest <- transform(test, State = as.character(State))
sapply(ttest, class)
sapply(ttest,mode)
mean(ttest$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
ttest <- transform(test, Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack = as.numeric(Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack))
ttest <- transform(ttest, Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack = as.numeric(Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack))
lapply(ttest, class)
lapply(ttest, mode)
head(ttest)
outcome_of_care_measures <- data.frame("State"=outcome_of_care_measures$State,
"Hospital 30-Day Death (Mortality) Rates from Heart Attack"=outcome_of_care_measures$`Hospital 30-Day Death (Mortality) Rates from Heart Attack`,
"Hospital 30-Day Death (Mortality) Rates from Heart Failure"=outcome_of_care_measures$`Hospital 30-Day Death (Mortality) Rates from Heart Failure`,
"Hospital 30-Day Death (Mortality) Rates from Pneumonia"=outcome_of_care_measures$`Hospital 30-Day Death (Mortality) Rates from Pneumonia`)
## Return hospital name in that state with lowest 30-day death
test <- data.frame("State"=outcome_of_care_measures$State,
"Hospital 30-Day Death (Mortality) Rates from Heart Attack"=outcome_of_care_measures$`Hospital 30-Day Death (Mortality) Rates from Heart Attack`,
"Hospital 30-Day Death (Mortality) Rates from Heart Failure"=outcome_of_care_measures$`Hospital 30-Day Death (Mortality) Rates from Heart Failure`,
"Hospital 30-Day Death (Mortality) Rates from Pneumonia"=outcome_of_care_measures$`Hospital 30-Day Death (Mortality) Rates from Pneumonia`)
## Return hospital name in that state with lowest 30-day death
test <- data.frame("State"=outcome_of_care_measures$State,
"Hospital 30-Day Death (Mortality) Rates from Heart Attack"=outcome_of_care_measures$`Hospital 30-Day Death (Mortality) Rates from Heart Attack`,
"Hospital 30-Day Death (Mortality) Rates from Heart Failure"=outcome_of_care_measures$`Hospital 30-Day Death (Mortality) Rates from Heart Failure`,
"Hospital 30-Day Death (Mortality) Rates from Pneumonia"=outcome_of_care_measures$`Hospital 30-Day Death (Mortality) Rates from Pneumonia`)
## Return hospital name in that state with lowest 30-day death
outcome_of_care_measures <- suppressMessages(read_csv("outcome-of-care-measures.csv"))
test <- data.frame("State"=outcome_of_care_measures$State,
"Hospital 30-Day Death (Mortality) Rates from Heart Attack"=outcome_of_care_measures$`Hospital 30-Day Death (Mortality) Rates from Heart Attack`,
"Hospital 30-Day Death (Mortality) Rates from Heart Failure"=outcome_of_care_measures$`Hospital 30-Day Death (Mortality) Rates from Heart Failure`,
"Hospital 30-Day Death (Mortality) Rates from Pneumonia"=outcome_of_care_measures$`Hospital 30-Day Death (Mortality) Rates from Pneumonia`)
lapply(test, class)
lapply(test, mode)
rm(ttest)
test <- as.data.frame(lapply(test, function(x){ replace(x, x == "Not Available", NA)}))
lapply(test, class)
unique(test$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
test$State <- as.character(as.factor(test$State))
str(test)
lapply(test, class)
test[sapply(test, is.factor)] <-lapply(test[sapply(test, is.factor)], as.numeric)
str(test)
min(test$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
min(test$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack, na.rm = T)
head(test)
test <- data.frame("State"=outcome_of_care_measures$State,
"Hospital 30-Day Death (Mortality) Rates from Heart Attack"=outcome_of_care_measures$`Hospital 30-Day Death (Mortality) Rates from Heart Attack`,
"Hospital 30-Day Death (Mortality) Rates from Heart Failure"=outcome_of_care_measures$`Hospital 30-Day Death (Mortality) Rates from Heart Failure`,
"Hospital 30-Day Death (Mortality) Rates from Pneumonia"=outcome_of_care_measures$`Hospital 30-Day Death (Mortality) Rates from Pneumonia`)
head(test)
test <- as.data.frame(lapply(test, function(x) replace(x, x=="Not Available", NA)))
head(test)
test$State <- as.character(test$State)
str(test)
as.numeric(test$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
as.numeric(as.factor(test$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack))
as.numeric(as.character(test$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack))
test <- as.data.frame(lapply(test, as.character))
str(test)
test <- data.frame("State"=outcome_of_care_measures$State,
"Hospital 30-Day Death (Mortality) Rates from Heart Attack"=outcome_of_care_measures$`Hospital 30-Day Death (Mortality) Rates from Heart Attack`,
"Hospital 30-Day Death (Mortality) Rates from Heart Failure"=outcome_of_care_measures$`Hospital 30-Day Death (Mortality) Rates from Heart Failure`,
"Hospital 30-Day Death (Mortality) Rates from Pneumonia"=outcome_of_care_measures$`Hospital 30-Day Death (Mortality) Rates from Pneumonia`)
str(test)
test[sapply(test, is.factor)] <-lapply(test[sapply(test, is.factor)], as.character)
str(test)
test <- as.data.frame(lapply(test, function(x) replace(x, x == "Not Available", NA)))
str(test)
test
lapply(test, class)
lapply(test,mode)
test <- data.frame("State"=outcome_of_care_measures$State,
+                                        "Hospital 30-Day Death (Mortality) Rates from Heart Attack"=outcome_of_care_measures$`Hospital 30-Day Death (Mortality) Rates from Heart Attack`,
+                                        "Hospital 30-Day Death (Mortality) Rates from Heart Failure"=outcome_of_care_measures$`Hospital 30-Day Death (Mortality) Rates from Heart Failure`,
+                                        "Hospital 30-Day Death (Mortality) Rates from Pneumonia"=outcome_of_care_measures$`Hospital 30-Day Death (Mortality) Rates from Pneumonia`)
test <- data.frame("State"=outcome_of_care_measures$State,
+                                        "Hospital 30-Day Death (Mortality) Rates from Heart Attack"=outcome_of_care_measures$`Hospital 30-Day Death (Mortality) Rates from Heart Attack`,
+                                        "Hospital 30-Day Death (Mortality) Rates from Heart Failure"=outcome_of_care_measures$`Hospital 30-Day Death (Mortality) Rates from Heart Failure`,
+                                        "Hospital 30-Day Death (Mortality) Rates from Pneumonia"=outcome_of_care_measures$`Hospital 30-Day Death (Mortality) Rates from Pneumonia`)
test <- data.frame("State"=outcome_of_care_measures$State,
+                                        "Hospital 30-Day Death (Mortality) Rates from Heart Attack"=outcome_of_care_measures$`Hospital 30-Day Death (Mortality) Rates from Heart Attack`,
+                                        "Hospital 30-Day Death (Mortality) Rates from Heart Failure"=outcome_of_care_measures$`Hospital 30-Day Death (Mortality) Rates from Heart Failure`,
+                                        "Hospital 30-Day Death (Mortality) Rates from Pneumonia"=outcome_of_care_measures$`Hospital 30-Day Death (Mortality) Rates from Pneumonia`)
test <- data.frame("State"=outcome_of_care_measures$State,
"Hospital 30-Day Death (Mortality) Rates from Heart Attack"=outcome_of_care_measures$`Hospital 30-Day Death (Mortality) Rates from Heart Attack`,
"Hospital 30-Day Death (Mortality) Rates from Heart Failure"=outcome_of_care_measures$`Hospital 30-Day Death (Mortality) Rates from Heart Failure`,
"Hospital 30-Day Death (Mortality) Rates from Pneumonia"=outcome_of_care_measures$`Hospital 30-Day Death (Mortality) Rates from Pneumonia`)
View(test)
str(test)
test <- as.data.frame(lapply(test, function(x) { replace(x, x == "Not Available", NA)}))
head(test)
str(test)
test$State <- as.character(test$State)
str(test)
test$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack <- as.numeric(test$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
str(test)
test <- data.frame("State"=outcome_of_care_measures$State,
"Hospital 30-Day Death (Mortality) Rates from Heart Attack"=outcome_of_care_measures$`Hospital 30-Day Death (Mortality) Rates from Heart Attack`,
"Hospital 30-Day Death (Mortality) Rates from Heart Failure"=outcome_of_care_measures$`Hospital 30-Day Death (Mortality) Rates from Heart Failure`,
"Hospital 30-Day Death (Mortality) Rates from Pneumonia"=outcome_of_care_measures$`Hospital 30-Day Death (Mortality) Rates from Pneumonia`)
str(test)
