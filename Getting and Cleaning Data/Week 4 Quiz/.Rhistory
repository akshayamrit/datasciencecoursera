library(devtools)
install.packages("slidify")
search()
install_github("slidify","ramnathv")
install_github("slidify","ramnathv")
install_github(slidify','ramnathv')
install_github('slidify','ramnathv')
library(devtools)
pkgs <- c('ramnathv/slidifyLibraries', 'ramnathv/slidify')
devtools::install_github(pkgs)
search()
library(slidify)
install.packages("ggplot2")
source("http://bioconductor.org/biocLite.R")
install.packages("BiocManager")
BiocManager::install()
BiocManager::available()
BiocManager::install(c("GenomicFeatures", "AnnotationDbi"))
library(ggplot2)
search()
find.package("devtools")
library(devtools)
find_rtools()
find.package("KernSmooth")
library(KernSmooth)
clear()
m <- matrix(rnorm(25,10), nrow = 5,ncol = 5)
m
solve(m)
library("matlib")
library(matlib)
install.packages("matlib")
matlib::inv(m) == solve(m)
matlib::inv(m)
solve(m)
library(xlsx)
fun(libname, pkgname)
library(openxlsx)
library(xlsx)
Sys.setenv(JAVA_HOME='C:\\Program Files\\Java\\jre1.8.0_211')
library(rJava)
find.java <- function() {
for (root in c("HLM", "HCU")) for (key in c("Software\\JavaSoft\\Java Runtime Environment",
"Software\\JavaSoft\\Java Development Kit")) {
hive <- try(utils::readRegistry(key, root, 2),
silent = TRUE)
if (!inherits(hive, "try-error"))
return(hive)
}
hive
}
find.java()
Sys.setenv(JAVA_HOME='C:\\Program Files (x86)\\Java\\jre1.8.0_211')
find.java()
Sys.setenv(JAVA_HOME="C:\Program Files (x86)\Java\jre1.8.0_211")
Sys.setenv(JAVA_HOME="C:\\Program Files (x86)\\Java\\jre1.8.0_211")
find.java()
find.java <- function() {
for (root in c("HLM", "HCU")) for (key in c("Software\\JavaSoft\\Java Runtime Environment",
"Software\\JavaSoft\\Java Development Kit")) {
hive <- try(utils::readRegistry(key, root, 2),
silent = TRUE)
if (!inherits(hive, "try-error"))
return(hive)
}
hive
}
find.java()
Sys.setenv(JAVA_HOME='C:\\Program Files (x86)\\Java\\jre1.8.0_211')
find.java()
setwd("~/datasciencecoursera")
library(readr)
cameras <- read_csv("~/Data_Science_Specialization_Material/03_GettingData/04_01_editingTextVariables/data/cameras.csv")
View(cameras)
names(cameras)
tolower(names(cameras))
strsplit(names(cameras), "\\ ")
library(readr)
reviews <- read_csv("~/Data_Science_Specialization_Material/03_GettingData/04_01_editingTextVariables/data/reviews.csv")
View(reviews)
library(readr)
solutions <- read_csv("~/Data_Science_Specialization_Material/03_GettingData/04_01_editingTextVariables/data/solutions.csv")
View(solutions)
a  <- "this_is_a_test"
sub("_", "", a)
a
gsub("_", "", a)
a
a <- gsub("_", "", a)
a
rm(a)
library(lubridate)
install.packages("lubridate")
Sys.timezone()
?POSIXlt
library(swirl)
swirl()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = "lubridate")
help(package = lubridate)
today()
this_day <- today()
this_day
day(this_day)
wday(this_day)
wday(this_day, label = TRUE
)
now()
this_moment <- now()
this_moment
hour(this_moment)
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment <- update(this_moment, hours = 8, minutes =10)
this_moment
?now
nyc <- now(tzone = "America/New_York")
nyc
depart <- nyc + days(2)
depart
depart <- depart + hour(17) + minute(34)
depart <- depart + hours(17) + minutes(34)
depart <- update(depart,hours(17), minutes(34))
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- depart + hour(15) + minute(50)
arrive <- depart + hours(15) + minutes(50)
?with_tz
with_tz(arrive, tzone = "Asia/Hong_Kong")
with_tz(arrive, "Asia/Hong_Kong")
arrive <- with_tz(arrive, "Asia/Hong_Kong")
arrive
mdy("June 17, 2008", tz = "Singapore")
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
?interval
how_long <- interval(arrive, last_time)
how_long <- interval(, arrive)
how_long <- interval(last_time, arrive)
period(how_long)
as.period(last_time)
as.period(how_long)
stopwatch()
setwd("~/datasciencecoursera/Getting and Cleaning Data/Week 4 Quiz")
download.file(url = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", destfile = "us_communities.csv", method = "curl")
library(readr)
us_communities <- read_csv("us_communities.csv")
View(us_communities)
strsplit(us_communities, split = "wgtp")
strsplit(names(us_communities), split = "wgtp")
strsplit(names(us_communities), split = "wgtp")[123]
strsplit(names(us_communities), split = "wgtp")[[123]]
download.file(url = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", destfile = "GDP.csv", method = "curl")
library(readr)
GDP <- read_csv("GDP.csv")
View(GDP)
GDP <- gsub(x = GDP$X5, pattern = ",". replacement = "")
GDP <- gsub("\,", "", GDP$X5)
GDP <- gsub("\\,", "", GDP$X5)
GDP
library(readr)
GDP <- read_csv("GDP.csv")
View(GDP)
lapply(GDP, gsub, "\\,", "")
gsub("\\,", "", GDP)
library(tidyr)
library(dplyr)
GPD <- as_tibble( gsub("\\,", "", GDP))
GDP
GPD
rm(GPD)
library(readr)
GDP <- read_csv("GDP.csv")
View(GDP)
GDP$X5 <- gsub(",", "", GDP$X5)
View(GDP)
mean(GDP$X5)
mean(GDP$X5, na.rm = T)
class(GDP$`Gross domestic product 2012`) = "numeric"
class(GDP$X5) = "numeric"
GDP %>% filter(!is.na(GDP$`Gross domestic product 2012`)) %>% mean(GDP$X5)
GDP %>% filter(!is.na(GDP$`Gross domestic product 2012`)) %>% mean(GDP$X5, na.rm = )
GDP %>% filter(!is.na(GDP$`Gross domestic product 2012`)) %>% mean(GDP$X5, na.rm = T)
GDP <- filter(GDP, !is.na(GDP$`Gross domestic product 2012`))
View(GDP)
mean(GDP$X5)
grep("^United",countryNames),
grep("^United",GDP$X4),
grep("^United",GDP$X4)
count(grep("^United",GDP$X4))
length(grep("^United",GDP$X4))
download.file(url = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv", destfile = "edu_data.csv", method = "curl")
library(readr)
edu_data <- read_csv("edu_data.csv")
View(edu_data)
merged_fisc <- merge(GDP[,1:2], edu_data[,c(1,10)], by.x = "X1", by.y = "CountryCode")
head(merged_fisc)
count(grep("June", merged_fisc$`Special Notes`))
length(grep("June", merged_fisc$`Special Notes`))
length(grep("end: June", merged_fisc$`Special Notes`))
View(merged_fisc[merged_fisc$`Special Notes` %in% "June",])
merged_fisc[merged_fisc$`Special Notes` %in% "June",]
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
str(sampleTimes)
year(sampleTimes)
sampleTimes(year(2012))
sampleTimes(year(sampleTimes) == year(2012))
sampleTimes(year(sampleTimes) == year("2012"))
sampleTimes(year(sampleTimes) == "2012")
dt_Table <- as_tibble(sampleTimes)
dt_Table
count(dt_Table[year(dt_Table$value) == year(2012)])
count(dt_Table[year(dt_Table$value) == year(2012),])
year(dt_Table$value)
year(dt_Table$value) == "2012"
count(dt_Table[year(dt_Table$value) == "2012",])
count(dt_Table[year(dt_Table$value) == "2012" & wday(dt_Table$value) == "1",])
wday(dt_Table$value[1])
?wday
wday(dt_Table$value[1], label = T)
count(dt_Table[year(dt_Table$value) == "2012" & wday(dt_Table$value) == "2",])
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
dt_Table <- as_tibble(sampleTimes)
count(dt_Table[year(dt_Table$value) == "2012",])
count(dt_Table[year(dt_Table$value) == "2012" & wday(dt_Table$value) == "2",])
rm(list = ls())
library(readr)
us_communities <- read_csv("us_communities.csv")
strsplit(names(us_communities), split = "wgtp")[[123]]
GDP <- read_csv("GDP.csv")
GDP$X5 <- gsub(",", "", GDP$X5)
class(GDP$`Gross domestic product 2012`) = "numeric"
class(GDP$X5) = "numeric"
GDP <- filter(GDP, !is.na(GDP$`Gross domestic product 2012`))
mean(GDP$X5)
length(grep("^United",GDP$X4))
edu_data <- read_csv("edu_data.csv")
merged_fisc <- merge(GDP[,1:2], edu_data[,c(1,10)], by.x = "X1", by.y = "CountryCode")
length(grep("end: June", merged_fisc$`Special Notes`))
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
dt_Table <- as_tibble(sampleTimes)
count(dt_Table[year(dt_Table$value) == "2012",])
count(dt_Table[year(dt_Table$value) == "2012" & wday(dt_Table$value) == "2",])
rm(list = ls())
