library(devtools)
install.packages("slidify")
search()
install_github("slidify","ramnathv")
install_github("slidify","ramnathv")
install_github(slidify','ramnathv')
install_github('slidify','ramnathv')
library(devtools)
pkgs <- c('ramnathv/slidifyLibraries', 'ramnathv/slidify')
devtools::install_github(pkgs)
search()
library(slidify)
install.packages("ggplot2")
source("http://bioconductor.org/biocLite.R")
install.packages("BiocManager")
BiocManager::install()
BiocManager::available()
BiocManager::install(c("GenomicFeatures", "AnnotationDbi"))
library(ggplot2)
search()
find.package("devtools")
library(devtools)
find_rtools()
find.package("KernSmooth")
library(KernSmooth)
clear()
m <- matrix(rnorm(25,10), nrow = 5,ncol = 5)
m
solve(m)
library("matlib")
library(matlib)
install.packages("matlib")
matlib::inv(m) == solve(m)
matlib::inv(m)
solve(m)
library(xlsx)
fun(libname, pkgname)
library(openxlsx)
library(xlsx)
Sys.setenv(JAVA_HOME='C:\\Program Files\\Java\\jre1.8.0_211')
library(rJava)
find.java <- function() {
for (root in c("HLM", "HCU")) for (key in c("Software\\JavaSoft\\Java Runtime Environment",
"Software\\JavaSoft\\Java Development Kit")) {
hive <- try(utils::readRegistry(key, root, 2),
silent = TRUE)
if (!inherits(hive, "try-error"))
return(hive)
}
hive
}
find.java()
Sys.setenv(JAVA_HOME='C:\\Program Files (x86)\\Java\\jre1.8.0_211')
find.java()
Sys.setenv(JAVA_HOME="C:\Program Files (x86)\Java\jre1.8.0_211")
Sys.setenv(JAVA_HOME="C:\\Program Files (x86)\\Java\\jre1.8.0_211")
find.java()
find.java <- function() {
for (root in c("HLM", "HCU")) for (key in c("Software\\JavaSoft\\Java Runtime Environment",
"Software\\JavaSoft\\Java Development Kit")) {
hive <- try(utils::readRegistry(key, root, 2),
silent = TRUE)
if (!inherits(hive, "try-error"))
return(hive)
}
hive
}
find.java()
Sys.setenv(JAVA_HOME='C:\\Program Files (x86)\\Java\\jre1.8.0_211')
find.java()
setwd("~/datasciencecoursera/Getting and Cleaning Data/Course Project")
data.table::data.table("UCI HAR Dataset/activity_labels.txt")
read.table("UCI HAR Dataset/activity_labels.txt")
activity_labels <- read.table("UCI HAR Dataset/activity_labels.txt")
features <- read.table("UCI HAR Dataset/features.txt")
summary(features)
head(features)
features <- features$V2
library(stringr)
features <- stringr::str_replace_all(features, "\\(", replacement = "")
features <- stringr::str_replace_all(features, "\\)", replacement = "")
features <- stringr::str_replace_all(features, "^t", replacement = "Time ")
features <- stringr::str_replace_all(features, "^f", replacement = "Frequency ")
features <- stringr::str_replace_all(features, "-", replacement = " ")
features <- stringr::str_replace_all(features, "_", replacement = " ")
features <- stringr::str_replace_all(features, "X$", replacement = "x axis")
features <- stringr::str_replace_all(features, "Y$", replacement = "y axis")
features <- stringr::str_replace_all(features, "Z$", replacement = "z axis")
features <- stringr::str_to_lower(features)
subject_test <- read.table("UCI HAR Dataset/test/subject_test.txt")
x_test <- read.table("UCI HAR Dataset/test/X_test.txt")
y_test <- read.table("UCI HAR Dataset/test/y_test.txt")
subject_train <- read.table("UCI HAR Dataset/train/subject_train.txt")
x_train <- read.table("UCI HAR Dataset/train/X_train.txt")
y_train <- read.table("UCI HAR Dataset/train/y_train.txt")
library(dplyr)
colnames(x_test)
colnames(x_test) <- features
colnames(x_test)
colnames(y_test) <- features
colnames(x_train) <- features
test <- cbind(subject_test, y_test, x_test)
train <- cbind(subject_train, y_train, x_train)
merged_data <- rbind(test,train)
merged_data[1:5,1:10]
rename(merged_data, subject = V1, activity = V1.1)
rlang::last_error()
names(merged_data[,1])
names(merged_data[,2])
names(merged_data)
rename(subject_test, subject = V1)
head(subject_test)
subject_test <- rename(subject_test, subject = V1)
head(subject_test)
subject_train <- rename(subject_train, subject = V1)
y_test <- rename(y_test, activity = V1)
y_train <- rename(y_train, activity = V1)
test <- cbind(subject_test, y_test, x_test)
train <- cbind(subject_train, y_train, x_train)
merged_data <- rbind(test,train)
merged_data[1:5,1:10]
rm(list = ls())
## Updated R script to create tidy data
library(dplyr)
library(stringr)
activity_labels <- read.table("UCI HAR Dataset/activity_labels.txt")
features <- read.table("UCI HAR Dataset/features.txt")
features <- features$V2
features <- str_replace_all(features, "\\(", replacement = "")
features <- str_replace_all(features, "\\)", replacement = "")
features <- str_replace_all(features, "^t", replacement = "Time ")
features <- str_replace_all(features, "^f", replacement = "Frequency ")
features <- str_replace_all(features, "-", replacement = " ")
features <- str_replace_all(features, "_", replacement = " ")
features <- str_replace_all(features, "X$", replacement = "x axis")
features <- str_replace_all(features, "Y$", replacement = "y axis")
features <- str_replace_all(features, "Z$", replacement = "z axis")
features <- str_to_lower(features)
subject_test <- read.table("UCI HAR Dataset/test/subject_test.txt")
x_test <- read.table("UCI HAR Dataset/test/X_test.txt")
y_test <- read.table("UCI HAR Dataset/test/y_test.txt")
subject_train <- read.table("UCI HAR Dataset/train/subject_train.txt")
x_train <- read.table("UCI HAR Dataset/train/X_train.txt")
y_train <- read.table("UCI HAR Dataset/train/y_train.txt")
colnames(x_test) <- features
colnames(x_train) <- features
test <- cbind(subject = subject_test, activity = y_test, x_test)
train <- cbind(subject = subject_train, activity = y_train, x_train)
merged_data <- rbind(test,train)
merged_data[:2, :5]
merged_data[1:2, 1:5]
head(test)
rm(list = ls())
library(dplyr)
library(stringr)
activity_labels <- read.table("UCI HAR Dataset/activity_labels.txt")
features <- read.table("UCI HAR Dataset/features.txt")
features <- features$V2
features <- str_replace_all(features, "\\(", replacement = "")
features <- str_replace_all(features, "\\)", replacement = "")
features <- str_replace_all(features, "^t", replacement = "Time ")
features <- str_replace_all(features, "^f", replacement = "Frequency ")
features <- str_replace_all(features, "-", replacement = " ")
features <- str_replace_all(features, "_", replacement = " ")
features <- str_replace_all(features, "X$", replacement = "x axis")
features <- str_replace_all(features, "Y$", replacement = "y axis")
features <- str_replace_all(features, "Z$", replacement = "z axis")
features <- str_to_lower(features)
subject_test <- read.table("UCI HAR Dataset/test/subject_test.txt")
x_test <- read.table("UCI HAR Dataset/test/X_test.txt")
y_test <- read.table("UCI HAR Dataset/test/y_test.txt")
subject_train <- read.table("UCI HAR Dataset/train/subject_train.txt")
x_train <- read.table("UCI HAR Dataset/train/X_train.txt")
y_train <- read.table("UCI HAR Dataset/train/y_train.txt")
colnames(x_test) <- features
colnames(x_train) <- features
test <- cbind(subject = subject_test, activity = y_test, x_test)
colnames(test)
test <- cbind("subject" = subject_test, "activity" = y_test, x_test)
colnames(test)
rm(list = ls())
library(dplyr)
library(stringr)
activity_labels <- read.table("UCI HAR Dataset/activity_labels.txt")
features <- read.table("UCI HAR Dataset/features.txt")
features <- features$V2
features <- str_replace_all(features, "\\(", replacement = "")
features <- str_replace_all(features, "\\)", replacement = "")
features <- str_replace_all(features, "^t", replacement = "Time ")
features <- str_replace_all(features, "^f", replacement = "Frequency ")
features <- str_replace_all(features, "-", replacement = " ")
features <- str_replace_all(features, "_", replacement = " ")
features <- str_replace_all(features, "X$", replacement = "x axis")
features <- str_replace_all(features, "Y$", replacement = "y axis")
features <- str_replace_all(features, "Z$", replacement = "z axis")
features <- str_to_lower(features)
subject_test <- read.table("UCI HAR Dataset/test/subject_test.txt")
x_test <- read.table("UCI HAR Dataset/test/X_test.txt")
y_test <- read.table("UCI HAR Dataset/test/y_test.txt")
subject_train <- read.table("UCI HAR Dataset/train/subject_train.txt")
x_train <- read.table("UCI HAR Dataset/train/X_train.txt")
y_train <- read.table("UCI HAR Dataset/train/y_train.txt")
colnames(x_test) <- features
colnames(x_train) <- features
subject_test <- rename(subject_test, subject = V1)
subject_train <- rename(subject_train, subject = V1)
y_test <- rename(y_test, activity = V1)
y_train <- rename(y_train, activity = V1)
test <- cbind(subject_test, y_test, x_test)
test[1:5,1:5]
colnames(test)
features <- str_replace_all(features, "[()]", replacement = "")
features
rm(list = ls())
features <- read.table("UCI HAR Dataset/features.txt")
features <- features$V2
features <- str_replace_all(features, "[()]", replacement = "")
features
features <- read.table("UCI HAR Dataset/features.txt")
features <- features$V2
count(features)
summary(features)
str(features)
length(features)
str_replace_all(features, "\\(\\)", "")
## Updated R script to create tidy data
library(dplyr)
library(stringr)
activity_labels <- read.table("UCI HAR Dataset/activity_labels.txt")
features <- read.table("UCI HAR Dataset/features.txt")
features <- features$V2
features <- str_replace_all(features, "\\(\\)", replacement = "")
features <- str_replace_all(features, "^t", replacement = "Time ")
features <- str_replace_all(features, "^f", replacement = "Frequency ")
features <- str_replace_all(features, "-", replacement = " ")
features <- str_replace_all(features, "_", replacement = " ")
features <- str_replace_all(features, "X$", replacement = "x axis")
features <- str_replace_all(features, "Y$", replacement = "y axis")
features <- str_replace_all(features, "Z$", replacement = "z axis")
features <- str_to_lower(features)
subject_test <- read.table("UCI HAR Dataset/test/subject_test.txt")
x_test <- read.table("UCI HAR Dataset/test/X_test.txt")
y_test <- read.table("UCI HAR Dataset/test/y_test.txt")
subject_train <- read.table("UCI HAR Dataset/train/subject_train.txt")
x_train <- read.table("UCI HAR Dataset/train/X_train.txt")
y_train <- read.table("UCI HAR Dataset/train/y_train.txt")
subject_test <- rename(subject_test, subject = V1)
subject_train <- rename(subject_train, subject = V1)
y_test <- rename(y_test, activity = V1)
y_train <- rename(y_train, activity = V1)
colnames(x_test) <- features
colnames(x_train) <- features
test <- cbind(subject_test, y_test, x_test)
train <- cbind(subject_train, y_train, x_train)
merged_data <- rbind(test,train)
colnames(merged_data)
test$activity <- activity_labels[test$activity, 2]
test$activity
merged_data$activity <- activity_labels[merged_data$activity, 2]
library(dplyr)
library(stringr)
activity_labels <- read.table("UCI HAR Dataset/activity_labels.txt")
features <- read.table("UCI HAR Dataset/features.txt")
features <- features$V2
features <- str_replace_all(features, "\\(\\)", replacement = "")
features <- str_replace_all(features, "^t", replacement = "Time ")
features <- str_replace_all(features, "^f", replacement = "Frequency ")
features <- str_replace_all(features, "-", replacement = " ")
features <- str_replace_all(features, "_", replacement = " ")
features <- str_replace_all(features, "X$", replacement = "x axis")
features <- str_replace_all(features, "Y$", replacement = "y axis")
features <- str_replace_all(features, "Z$", replacement = "z axis")
features <- str_to_lower(features)
subject_test <- read.table("UCI HAR Dataset/test/subject_test.txt")
x_test <- read.table("UCI HAR Dataset/test/X_test.txt")
y_test <- read.table("UCI HAR Dataset/test/y_test.txt")
subject_train <- read.table("UCI HAR Dataset/train/subject_train.txt")
x_train <- read.table("UCI HAR Dataset/train/X_train.txt")
y_train <- read.table("UCI HAR Dataset/train/y_train.txt")
subject_test <- rename(subject_test, subject = V1)
subject_train <- rename(subject_train, subject = V1)
y_test <- rename(y_test, activity = V1)
y_train <- rename(y_train, activity = V1)
colnames(x_test) <- features
colnames(x_train) <- features
test <- cbind(subject_test, y_test, x_test)
train <- cbind(subject_train, y_train, x_train)
merged_data <- rbind(test,train)
mutate(merged_data, activity = activity_labels[activity,2])
mutate(merged_data, activity = activity_labels[merged_data$activity,2])
merged_data$activity <- activity_labels[merged_data$activity, 2]
head(merged_data$activity)
## Updated R script to create tidy data
library(dplyr)
library(stringr)
activity_labels <- read.table("UCI HAR Dataset/activity_labels.txt")
features <- read.table("UCI HAR Dataset/features.txt")
features <- features$V2
features <- str_replace_all(features, "\\(\\)", replacement = "")
features <- str_replace_all(features, "^t", replacement = "Time ")
features <- str_replace_all(features, "^f", replacement = "Frequency ")
features <- str_replace_all(features, "-", replacement = " ")
features <- str_replace_all(features, "_", replacement = " ")
features <- str_replace_all(features, "X$", replacement = "x axis")
features <- str_replace_all(features, "Y$", replacement = "y axis")
features <- str_replace_all(features, "Z$", replacement = "z axis")
features <- str_to_lower(features)
subject_test <- read.table("UCI HAR Dataset/test/subject_test.txt")
x_test <- read.table("UCI HAR Dataset/test/X_test.txt")
y_test <- read.table("UCI HAR Dataset/test/y_test.txt")
subject_train <- read.table("UCI HAR Dataset/train/subject_train.txt")
x_train <- read.table("UCI HAR Dataset/train/X_train.txt")
y_train <- read.table("UCI HAR Dataset/train/y_train.txt")
subject_test <- rename(subject_test, subject = V1)
subject_train <- rename(subject_train, subject = V1)
y_test <- rename(y_test, activity = V1)
y_train <- rename(y_train, activity = V1)
colnames(x_test) <- features
colnames(x_train) <- features
test <- cbind(subject_test, y_test, x_test)
train <- cbind(subject_train, y_train, x_train)
merged_data <- rbind(test,train)
mutate(merged_data, activity = activity_labels[activity, 2])
length(unique(colnames(merged_data)))
length(unique(colnames(merged_data)))
merged_data %>% select(contains("mean") | contains("std"))
merged_data[, grepl("mean", colnames(merged_data)) | grepl("std", colnames(merged_data))]
merged_data[, c(1,2) | grepl("mean", colnames(merged_data)) | grepl("std", colnames(merged_data))]
merged_data[, "subject" | "activity" | grepl("mean", colnames(merged_data)) | grepl("std", colnames(merged_data))]
merged_data[, is.element("subject", colnames(merged_data)) | is.element("activity", colnames(merged_data)) | grepl("mean", colnames(merged_data)) | grepl("std", colnames(merged_data))]
merged_data %>% select(1:2)
features <- read.table("UCI HAR Dataset/features.txt")
features <- features$V2
length(unique(features))
merged_data[, grepl("mean", colnames(merged_data)[3:563]) | grepl("std", colnames(merged_data)[3:563])]
selective_merged_data <- merged_data[, grepl("mean", colnames(merged_data)[3:563]) | grepl("std", colnames(merged_data)[3:563])]
length(unique(colnames(selective_merged_data)))
str(selective_merged_data)
mean_data <- merged_data[, grepl("mean", colnames(merged_data)[3:563])]
table(grepl("mean", merged_data))
table(grepl("mean", colnames(merged_data)))
table(grepl("std", colnames(merged_data)))
table(grepl("mean", features4))
table(grepl("mean", features))
features <- read.table("UCI HAR Dataset/features.txt")
features <- features$V2
table(grepl("mean", features))
table(grepl("std", features))
read.table("tidy_data.txt")
tidy_data <- read.table("tidy_data.txt")
length(unique(colnames(tidy_data)))
rm(list = ls())
activity_labels <- read.table("UCI HAR Dataset/activity_labels.txt")
features <- read.table("UCI HAR Dataset/features.txt")
length(unique(features$V2))
table
table(grepl("mean", features$V2))
table(grepl("std", features$V2))
table(grepl("mean|std", features$V2))
features <- features$V2
table(grepl("mean|std", features))
features <- str_replace_all(features, "\\(\\)", replacement = "")
table(grepl("mean|std", features))
features <- str_replace_all(features, "^t", replacement = "Time ")
table(grepl("mean|std", features))
features <- str_replace_all(features, "^f", replacement = "Frequency ")
table(grepl("mean|std", features))
features <- str_replace_all(features, "-", replacement = " ")
table(grepl("mean|std", features))
features <- str_replace_all(features, "_", replacement = " ")
table(grepl("mean|std", features))
features <- str_replace_all(features, "X$", replacement = "x axis")
table(grepl("mean|std", features))
features <- str_replace_all(features, "Y$", replacement = "y axis")
table(grepl("mean|std", features))
features <- str_replace_all(features, "Z$", replacement = "z axis")
table(grepl("mean|std", features))
features <- str_to_lower(features)
table(grepl("mean|std", features))
## Updated R script to create tidy data
library(dplyr)
library(stringr)
activity_labels <- read.table("UCI HAR Dataset/activity_labels.txt")
features <- read.table("UCI HAR Dataset/features.txt")
features <- features$V2
features <- str_replace_all(features, "\\(\\)", replacement = "")
features <- str_replace_all(features, "^t", replacement = "Time ")
features <- str_replace_all(features, "^f", replacement = "Frequency ")
features <- str_replace_all(features, "-", replacement = " ")
features <- str_replace_all(features, "_", replacement = " ")
features <- str_replace_all(features, "X$", replacement = "x axis")
features <- str_replace_all(features, "Y$", replacement = "y axis")
features <- str_replace_all(features, "Z$", replacement = "z axis")
subject_test <- read.table("UCI HAR Dataset/test/subject_test.txt")
x_test <- read.table("UCI HAR Dataset/test/X_test.txt")
y_test <- read.table("UCI HAR Dataset/test/y_test.txt")
subject_train <- read.table("UCI HAR Dataset/train/subject_train.txt")
x_train <- read.table("UCI HAR Dataset/train/X_train.txt")
y_train <- read.table("UCI HAR Dataset/train/y_train.txt")
subject_test <- rename(subject_test, subject = V1)
subject_train <- rename(subject_train, subject = V1)
y_test <- rename(y_test, activity = V1)
y_train <- rename(y_train, activity = V1)
colnames(x_test) <- features
colnames(x_train) <- features
test <- cbind(subject_test, y_test, x_test)
train <- cbind(subject_train, y_train, x_train)
merged_data <- rbind(test,train)
merged_data$activity <- activity_labels[merged_data$activity, 2]
selective_merged_data <- merged_data[ , grepl("mean|std", colnames(merged_data)[3:563])]
str(selective_merged_data)
selective_merged_data <- merged_data[ , grepl("mean|std", colnames(merged_data))]
str(selective_merged_data)
selective_merged_data <- cbind(merged_data[,1:2], selective_merged_data)
str(selective_merged_data)
tidy_data <- selective_merged_data %>% group_by(subject, activity) %>% summarize_each(mean)
tidy_data <- selective_merged_data %>% group_by(subject, activity) %>% summarize_all(mean)
?summarize_each
tidy_data <- selective_merged_data %>% group_by(subject, activity) %>% summarize_at(vars(-subject, -activity), mean)
tidy_data <- selective_merged_data %>% group_by(subject, activity) %>% summarize_at(c(-subject, -activity), mean)
tidy_data <- selective_merged_data %>% group_by(subject, activity) %>% summarize_at(-(1:2), mean)
str(tidy_data)
tidy_data <- selective_merged_data %>% group_by(subject, activity) %>% summarize_all(mean)
## Updated R script to create tidy data
library(dplyr)
library(stringr)
activity_labels <- read.table("UCI HAR Dataset/activity_labels.txt")
features <- read.table("UCI HAR Dataset/features.txt")
features <- features$V2
features <- str_replace_all(features, "\\(\\)", replacement = "")
features <- str_replace_all(features, "^t", replacement = "Time ")
features <- str_replace_all(features, "^f", replacement = "Frequency ")
features <- str_replace_all(features, "-", replacement = " ")
features <- str_replace_all(features, "_", replacement = " ")
features <- str_replace_all(features, "X$", replacement = "x axis")
features <- str_replace_all(features, "Y$", replacement = "y axis")
features <- str_replace_all(features, "Z$", replacement = "z axis")
subject_test <- read.table("UCI HAR Dataset/test/subject_test.txt")
x_test <- read.table("UCI HAR Dataset/test/X_test.txt")
y_test <- read.table("UCI HAR Dataset/test/y_test.txt")
subject_train <- read.table("UCI HAR Dataset/train/subject_train.txt")
x_train <- read.table("UCI HAR Dataset/train/X_train.txt")
y_train <- read.table("UCI HAR Dataset/train/y_train.txt")
subject_test <- rename(subject_test, subject = V1)
subject_train <- rename(subject_train, subject = V1)
y_test <- rename(y_test, activity = V1)
y_train <- rename(y_train, activity = V1)
colnames(x_test) <- features
colnames(x_train) <- features
test <- cbind(subject_test, y_test, x_test)
train <- cbind(subject_train, y_train, x_train)
merged_data <- rbind(test,train)
merged_data$activity <- activity_labels[merged_data$activity, 2]
selective_merged_data <- merged_data[ , grepl("mean|std", colnames(merged_data))]
selective_merged_data <- cbind(merged_data[,1:2], selective_merged_data)
tidy_data <- selective_merged_data %>% group_by(subject, activity) %>% summarize_all(mean)
write.table(tidy_data, file = "tidy_data.txt", col.names = FALSE)
View(tidy_data)
library(dataMaid)
?makeCodebook
makeCodebook(tidy_data, reportTitle = "tidy_data codebook")
?makeDataReport
makeDataReport(data = tidy_data, output = "html", mode = c("summarize", "check"), file = "codebook_tidy_data.Rmd", replace = TRUE, codebook = TRUE, reportTitle = "Data Dictionary- tidy_data")
makeDataReport(data = tidy_data, output = "html", mode = c("summarize"), file = "codebook_tidy_data.Rmd", replace = TRUE, codebook = TRUE, reportTitle = "Data Dictionary- tidy_data")
makeDataReport(data = tidy_data, output = "html", mode = c("summarize"), file = "codebook_tidy_data.Rmd", replace = TRUE, codebook = TRUE, reportTitle = "Data Dictionary- tidy_data", standAlone = TRUE)
knit_with_parameters('~/datasciencecoursera/Getting and Cleaning Data/Course Project/codebook_tidy_data.Rmd')
makeCodebook(tidy_data, reportTitle = "tidy_data codebook")
?makeCodebook
makeCodebook(tidy_data, reportTitle = "tidy_data codebook", vol = 2)
rm(list = ls())
